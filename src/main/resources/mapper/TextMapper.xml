<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.TextMapper">
	<resultMap id="BaseResultMap" type="pojo.Text">
		<id column="text_id" jdbcType="INTEGER" property="textId" />
		<result column="text_title" jdbcType="VARCHAR"
			property="textTitle" />
		<result column="text_releaseDate" jdbcType="TIMESTAMP"
			property="textReleasedate" />
		<result column="text_writerId" jdbcType="INTEGER"
			property="textWriterid" />
		<result column="text_img" jdbcType="VARCHAR" property="textImg" />
		<result column="text_likeNum" jdbcType="INTEGER"
			property="textLikenum" />
		<result column="text_commentNum" jdbcType="INTEGER"
			property="textCommentnum" />
		<result column="text_count" jdbcType="INTEGER"
			property="textCount" />
		<result column="text_collectNum" jdbcType="INTEGER"
			property="textCollectnum" />
		<association property="user" javaType="pojo.User">
			<id column="user_id" jdbcType="INTEGER" property="userId" />
			<result column="user_name" jdbcType="VARCHAR"
				property="userName" />
			<result column="user_password" jdbcType="VARCHAR"
				property="userPassword" />
			<result column="user_gender" jdbcType="VARCHAR"
				property="userGender" />
			<result column="user_words" jdbcType="VARCHAR"
				property="userWords" />
			<result column="user_email" jdbcType="VARCHAR"
				property="userEmail" />
			<result column="user_fansNum" jdbcType="INTEGER"
				property="userFansnum" />
			<result column="user_registDate" jdbcType="DATE"
				property="userRegistdate" />
			<result column="user_headPortrait" jdbcType="VARCHAR"
				property="userHeadportrait" />
			<result column="user_collectionsNum" jdbcType="INTEGER"
				property="userCollectionsnum" />
			<result column="user_focusNum" jdbcType="INTEGER"
				property="userFocusnum" />
			<result column="user_textsNum" jdbcType="INTEGER"
				property="userTextsnum" />
		</association>
	
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="pojo.Text">
		<result column="text_content" jdbcType="LONGVARCHAR"
			property="textContent" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Example_Where_Clause_With_User">
		<where>
			 text_writerId=user_id and
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		text_id, text_title, text_releaseDate, text_writerId, text_img, text_likeNum,
		text_commentNum,
		text_count, text_collectNum, text_content,user_id, user_name, user_password, user_gender, user_words, user_email, user_fansNum, 
    user_registDate, user_headPortrait, user_collectionsNum, user_focusNum, user_textsNum
	</sql>
	<sql id="Blob_Column_List">
		text_content
	</sql>
	<select id="selectByExampleWithBLOBs"
		parameterType="pojo.TextExample" resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from text
		<if test="_parameter != null">
			<include refid="Example_Where_Clause_With_User" />
		</if>
		<if test="orderByClause != null">
		     order by ${orderByClause}
		</if>
		
	</select>
	<select id="selectByExample" parameterType="pojo.TextExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from text,user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause_With_User" />
		</if>
		<if test="_parameter == null">
		 where  text_writerId=user_id and
		 </if>
		<if test="orderByClause != null">
		 1=1 order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExampleForFocus" parameterType="pojo.TextExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from text,user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause_With_User" />
		</if>
		<if test="_parameter == null">
		 where  text_writerId=user_id and
		 </if>
		<if test="orderByClause != null">
		and 1=1 order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from text,user
		where  text_writerId=user_id and  text_id = #{textId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from text
		where text_id = #{textId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="pojo.TextExample">
		delete from text
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="pojo.Text">
		insert into text (text_id, text_title, text_releaseDate,
		text_writerId, text_img, text_likeNum,
		text_commentNum, text_count, text_collectNum,
		text_content)
		values (#{textId,jdbcType=INTEGER}, #{textTitle,jdbcType=VARCHAR},
		#{textReleasedate,jdbcType=TIMESTAMP},
		#{textWriterid,jdbcType=INTEGER}, #{textImg,jdbcType=VARCHAR},
		#{textLikenum,jdbcType=INTEGER},
		#{textCommentnum,jdbcType=INTEGER}, #{textCount,jdbcType=INTEGER}, #{textCollectnum,jdbcType=INTEGER},
		#{textContent,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="pojo.Text">
		insert into text
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="textId != null">
				text_id,
			</if>
			<if test="textTitle != null">
				text_title,
			</if>
			<if test="textReleasedate != null">
				text_releaseDate,
			</if>
			<if test="textWriterid != null">
				text_writerId,
			</if>
			<if test="textImg != null">
				text_img,
			</if>
			<if test="textLikenum != null">
				text_likeNum,
			</if>
			<if test="textCommentnum != null">
				text_commentNum,
			</if>
			<if test="textCount != null">
				text_count,
			</if>
			<if test="textCollectnum != null">
				text_collectNum,
			</if>
			<if test="textContent != null">
				text_content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="textId != null">
				#{textId,jdbcType=INTEGER},
			</if>
			<if test="textTitle != null">
				#{textTitle,jdbcType=VARCHAR},
			</if>
			<if test="textReleasedate != null">
				#{textReleasedate,jdbcType=TIMESTAMP},
			</if>
			<if test="textWriterid != null">
				#{textWriterid,jdbcType=INTEGER},
			</if>
			<if test="textImg != null">
				#{textImg,jdbcType=VARCHAR},
			</if>
			<if test="textLikenum != null">
				#{textLikenum,jdbcType=INTEGER},
			</if>
			<if test="textCommentnum != null">
				#{textCommentnum,jdbcType=INTEGER},
			</if>
			<if test="textCount != null">
				#{textCount,jdbcType=INTEGER},
			</if>
			<if test="textCollectnum != null">
				#{textCollectnum,jdbcType=INTEGER},
			</if>
			<if test="textContent != null">
				#{textContent,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="pojo.TextExample"
		resultType="java.lang.Long">
		select count(*) from text
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update text
		<set>
			<if test="record.textId != null">
				text_id = #{record.textId,jdbcType=INTEGER},
			</if>
			<if test="record.textTitle != null">
				text_title = #{record.textTitle,jdbcType=VARCHAR},
			</if>
			<if test="record.textReleasedate != null">
				text_releaseDate = #{record.textReleasedate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.textWriterid != null">
				text_writerId = #{record.textWriterid,jdbcType=INTEGER},
			</if>
			<if test="record.textImg != null">
				text_img = #{record.textImg,jdbcType=VARCHAR},
			</if>
			<if test="record.textLikenum != null">
				text_likeNum = #{record.textLikenum,jdbcType=INTEGER},
			</if>
			<if test="record.textCommentnum != null">
				text_commentNum = #{record.textCommentnum,jdbcType=INTEGER},
			</if>
			<if test="record.textCount != null">
				text_count = #{record.textCount,jdbcType=INTEGER},
			</if>
			<if test="record.textCollectnum != null">
				text_collectNum = #{record.textCollectnum,jdbcType=INTEGER},
			</if>
			<if test="record.textContent != null">
				text_content = #{record.textContent,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update text
		set text_id = #{record.textId,jdbcType=INTEGER},
		text_title = #{record.textTitle,jdbcType=VARCHAR},
		text_releaseDate = #{record.textReleasedate,jdbcType=TIMESTAMP},
		text_writerId = #{record.textWriterid,jdbcType=INTEGER},
		text_img = #{record.textImg,jdbcType=VARCHAR},
		text_likeNum = #{record.textLikenum,jdbcType=INTEGER},
		text_commentNum = #{record.textCommentnum,jdbcType=INTEGER},
		text_count = #{record.textCount,jdbcType=INTEGER},
		text_collectNum = #{record.textCollectnum,jdbcType=INTEGER},
		text_content = #{record.textContent,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update text
		set text_id = #{record.textId,jdbcType=INTEGER},
		text_title = #{record.textTitle,jdbcType=VARCHAR},
		text_releaseDate = #{record.textReleasedate,jdbcType=TIMESTAMP},
		text_writerId = #{record.textWriterid,jdbcType=INTEGER},
		text_img = #{record.textImg,jdbcType=VARCHAR},
		text_likeNum = #{record.textLikenum,jdbcType=INTEGER},
		text_commentNum = #{record.textCommentnum,jdbcType=INTEGER},
		text_count = #{record.textCount,jdbcType=INTEGER},
		text_collectNum = #{record.textCollectnum,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="pojo.Text">
		update text
		<set>
			<if test="textTitle != null">
				text_title = #{textTitle,jdbcType=VARCHAR},
			</if>
			<if test="textReleasedate != null">
				text_releaseDate = #{textReleasedate,jdbcType=TIMESTAMP},
			</if>
			<if test="textWriterid != null">
				text_writerId = #{textWriterid,jdbcType=INTEGER},
			</if>
			<if test="textImg != null">
				text_img = #{textImg,jdbcType=VARCHAR},
			</if>
			<if test="textLikenum != null">
				text_likeNum = #{textLikenum,jdbcType=INTEGER},
			</if>
			<if test="textCommentnum != null">
				text_commentNum = #{textCommentnum,jdbcType=INTEGER},
			</if>
			<if test="textCount != null">
				text_count = #{textCount,jdbcType=INTEGER},
			</if>
			<if test="textCollectnum != null">
				text_collectNum = #{textCollectnum,jdbcType=INTEGER},
			</if>
			<if test="textContent != null">
				text_content = #{textContent,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where text_id = #{textId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeySelectiveCountAdd"
		parameterType="pojo.Text">
		update text
		<set>
			<if test="textTitle != null">
				text_title = #{textTitle,jdbcType=VARCHAR},
			</if>
			<if test="textReleasedate != null">
				text_releaseDate = #{textReleasedate,jdbcType=TIMESTAMP},
			</if>
			<if test="textWriterid != null">
				text_writerId = #{textWriterid,jdbcType=INTEGER},
			</if>
			<if test="textImg != null">
				text_img = #{textImg,jdbcType=VARCHAR},
			</if>
			<if test="textLikenum != null">
				text_likeNum =text_likeNum+ #{textLikenum,jdbcType=INTEGER},
			</if>
			<if test="textCommentnum != null">
				text_commentNum =text_commentNum+ #{textCommentnum,jdbcType=INTEGER},
			</if>
			<if test="textCount != null">
				text_count =text_count+ #{textCount,jdbcType=INTEGER},
			</if>
			<if test="textCollectnum != null">
				text_collectNum =text_collectNum+ #{textCollectnum,jdbcType=INTEGER},
			</if>
			<if test="textContent != null">
				text_content = #{textContent,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where text_id = #{textId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="pojo.Text">
		update text
		set text_title = #{textTitle,jdbcType=VARCHAR},
		text_releaseDate = #{textReleasedate,jdbcType=TIMESTAMP},
		text_writerId = #{textWriterid,jdbcType=INTEGER},
		text_img = #{textImg,jdbcType=VARCHAR},
		text_likeNum = #{textLikenum,jdbcType=INTEGER},
		text_commentNum = #{textCommentnum,jdbcType=INTEGER},
		text_count = #{textCount,jdbcType=INTEGER},
		text_collectNum = #{textCollectnum,jdbcType=INTEGER},
		text_content = #{textContent,jdbcType=LONGVARCHAR}
		where text_id = #{textId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="pojo.Text">
		update text
		set text_title = #{textTitle,jdbcType=VARCHAR},
		text_releaseDate = #{textReleasedate,jdbcType=TIMESTAMP},
		text_writerId = #{textWriterid,jdbcType=INTEGER},
		text_img = #{textImg,jdbcType=VARCHAR},
		text_likeNum = #{textLikenum,jdbcType=INTEGER},
		text_commentNum = #{textCommentnum,jdbcType=INTEGER},
		text_count = #{textCount,jdbcType=INTEGER},
		text_collectNum = #{textCollectnum,jdbcType=INTEGER}
		where text_id = #{textId,jdbcType=INTEGER}
	</update>
</mapper>
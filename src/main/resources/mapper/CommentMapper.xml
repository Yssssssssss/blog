<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.CommentMapper">
  <resultMap id="BaseResultMap" type="pojo.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_textId" jdbcType="INTEGER" property="commentTextid" />
    <result column="comment_userId" jdbcType="INTEGER" property="commentUserid" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
    <result column="comment_replyId" jdbcType="INTEGER" property="commentReplyid" />
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
    <association property="user" javaType="pojo.User">
			<id column="user_id" jdbcType="INTEGER" property="userId" />
			<result column="user_name" jdbcType="VARCHAR"
				property="userName" />
			<result column="user_password" jdbcType="VARCHAR"
				property="userPassword" />
			<result column="user_gender" jdbcType="VARCHAR"
				property="userGender" />
			<result column="user_words" jdbcType="VARCHAR"
				property="userWords" />
			<result column="user_email" jdbcType="VARCHAR"
				property="userEmail" />
			<result column="user_fansNum" jdbcType="INTEGER"
				property="userFansnum" />
			<result column="user_registDate" jdbcType="DATE"
				property="userRegistdate" />
			<result column="user_headPortrait" jdbcType="VARCHAR"
				property="userHeadportrait" />
			<result column="user_collectionsNum" jdbcType="INTEGER"
				property="userCollectionsnum" />
			<result column="user_focusNum" jdbcType="INTEGER"
				property="userFocusnum" />
			<result column="user_textsNum" jdbcType="INTEGER"
				property="userTextsnum" />
		</association>
    
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="pojo.Comment">
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>
  <sql id="Example_Where_Clause_With_User">
    <where>
    comment_userId=user_id and
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, comment_textId, comment_userId, comment_date, comment_replyId,comment_content, user_id, user_name, user_password, user_gender, user_words, user_email, user_fansNum, 
    user_registDate, user_headPortrait, user_collectionsNum, user_focusNum, user_textsNum
  </sql>
  <sql id="Blob_Column_List">
    comment_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="pojo.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause_With_User" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="pojo.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment,user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause_With_User" />
    </if>
    <if test="orderByClause != null">
      1=1 order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment,user
    where   comment_userId=user_id and  comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.Comment">
    insert into comment (comment_id, comment_textId, comment_userId, 
      comment_date, comment_replyId, comment_content
      )
    values (#{commentId,jdbcType=INTEGER}, #{commentTextid,jdbcType=INTEGER}, #{commentUserid,jdbcType=INTEGER}, 
      #{commentDate,jdbcType=TIMESTAMP}, #{commentReplyid,jdbcType=INTEGER}, #{commentContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pojo.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentTextid != null">
        comment_textId,
      </if>
      <if test="commentUserid != null">
        comment_userId,
      </if>
      <if test="commentDate != null">
        comment_date,
      </if>
      <if test="commentReplyid != null">
        comment_replyId,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentTextid != null">
        #{commentTextid,jdbcType=INTEGER},
      </if>
      <if test="commentUserid != null">
        #{commentUserid,jdbcType=INTEGER},
      </if>
      <if test="commentDate != null">
        #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentReplyid != null">
        #{commentReplyid,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.commentTextid != null">
        comment_textId = #{record.commentTextid,jdbcType=INTEGER},
      </if>
      <if test="record.commentUserid != null">
        comment_userId = #{record.commentUserid,jdbcType=INTEGER},
      </if>
      <if test="record.commentDate != null">
        comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentReplyid != null">
        comment_replyId = #{record.commentReplyid,jdbcType=INTEGER},
      </if>
      <if test="record.commentContent != null">
        comment_content = #{record.commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      comment_textId = #{record.commentTextid,jdbcType=INTEGER},
      comment_userId = #{record.commentUserid,jdbcType=INTEGER},
      comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
      comment_replyId = #{record.commentReplyid,jdbcType=INTEGER},
      comment_content = #{record.commentContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      comment_textId = #{record.commentTextid,jdbcType=INTEGER},
      comment_userId = #{record.commentUserid,jdbcType=INTEGER},
      comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
      comment_replyId = #{record.commentReplyid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Comment">
    update comment
    <set>
      <if test="commentTextid != null">
        comment_textId = #{commentTextid,jdbcType=INTEGER},
      </if>
      <if test="commentUserid != null">
        comment_userId = #{commentUserid,jdbcType=INTEGER},
      </if>
      <if test="commentDate != null">
        comment_date = #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentReplyid != null">
        comment_replyId = #{commentReplyid,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="pojo.Comment">
    update comment
    set comment_textId = #{commentTextid,jdbcType=INTEGER},
      comment_userId = #{commentUserid,jdbcType=INTEGER},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_replyId = #{commentReplyid,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Comment">
    update comment
    set comment_textId = #{commentTextid,jdbcType=INTEGER},
      comment_userId = #{commentUserid,jdbcType=INTEGER},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_replyId = #{commentReplyid,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>
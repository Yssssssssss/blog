<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.CollectMapper">
	<resultMap id="BaseResultMap" type="pojo.Collect">
		<id column="collect_id" jdbcType="INTEGER" property="collectId" />
		<result column="collect_userId" jdbcType="INTEGER"
			property="collectUserid" />
		<result column="collect_textId" jdbcType="INTEGER"
			property="collectTextid" />
		<result column="collect_date" jdbcType="DATE"
			property="collectDate" />
		<association property="text" javaType="pojo.Text">
			<id column="text_id" jdbcType="INTEGER" property="textId" />
			<result column="text_title" jdbcType="VARCHAR"
				property="textTitle" />
			<result column="text_releaseDate" jdbcType="TIMESTAMP"
				property="textReleasedate" />
			<result column="text_writerId" jdbcType="INTEGER"
				property="textWriterid" />
			<result column="text_img" jdbcType="VARCHAR"
				property="textImg" />
			<result column="text_likeNum" jdbcType="INTEGER"
				property="textLikenum" />
			<result column="text_commentNum" jdbcType="INTEGER"
				property="textCommentnum" />
			<result column="text_count" jdbcType="INTEGER"
				property="textCount" />
			<result column="text_collectNum" jdbcType="INTEGER"
				property="textCollectnum" />
			<result column="text_content" jdbcType="LONGVARCHAR"
				property="textContent" />
				<association property="user" javaType="pojo.User">
			<id column="user_id" jdbcType="INTEGER" property="userId" />
			<result column="user_name" jdbcType="VARCHAR"
				property="userName" />
			<result column="user_password" jdbcType="VARCHAR"
				property="userPassword" />
			<result column="user_gender" jdbcType="VARCHAR"
				property="userGender" />
			<result column="user_words" jdbcType="VARCHAR"
				property="userWords" />
			<result column="user_email" jdbcType="VARCHAR"
				property="userEmail" />
			<result column="user_fansNum" jdbcType="INTEGER"
				property="userFansnum" />
			<result column="user_registDate" jdbcType="DATE"
				property="userRegistdate" />
			<result column="user_headPortrait" jdbcType="VARCHAR"
				property="userHeadportrait" />
			<result column="user_collectionsNum" jdbcType="INTEGER"
				property="userCollectionsnum" />
			<result column="user_focusNum" jdbcType="INTEGER"
				property="userFocusnum" />
			<result column="user_textsNum" jdbcType="INTEGER"
				property="userTextsnum" />
		</association>
		</association>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Example_Where_Clause_Whit_Text">
		<where>
			collect_textId=text_id and text_writerId=user_id and
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		collect_id, collect_userId, collect_textId,
		collect_date,text_id, text_title,
		text_releaseDate, text_writerId,
		text_img, text_likeNum,
		text_commentNum,
		text_count,
		text_collectNum,text_content, user_id, user_name, user_password, user_gender, user_words, user_email, user_fansNum, 
    user_registDate, user_headPortrait, user_collectionsNum, user_focusNum, user_textsNum
	</sql>
	<select id="selectByExample" parameterType="pojo.CollectExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from collect,text,user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause_Whit_Text" />
		</if>
		<if test="_parameter == null">
		 where	collect_textid = text_id and  text_writerid=user_id  and
		 </if>
		
		<if test="orderByClause != null">
			1=1 order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from collect,text,user
		where  	collect_textid = text_id and  text_writerid=user_id and collect_id = #{collectId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from collect
		where collect_textId=text_id and
		collect_id = #{collectId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="pojo.CollectExample">
		delete from collect
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="pojo.Collect">
		insert into collect
		(collect_id, collect_userId, collect_textId,
		collect_date)
		values
		(#{collectId,jdbcType=INTEGER}, #{collectUserid,jdbcType=INTEGER},
		#{collectTextid,jdbcType=INTEGER},
		#{collectDate,jdbcType=DATE})
	</insert>
	<insert id="insertSelective" parameterType="pojo.Collect">
		insert into collect
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="collectId != null">
				collect_id,
			</if>
			<if test="collectUserid != null">
				collect_userId,
			</if>
			<if test="collectTextid != null">
				collect_textId,
			</if>
			<if test="collectDate != null">
				collect_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="collectId != null">
				#{collectId,jdbcType=INTEGER},
			</if>
			<if test="collectUserid != null">
				#{collectUserid,jdbcType=INTEGER},
			</if>
			<if test="collectTextid != null">
				#{collectTextid,jdbcType=INTEGER},
			</if>
			<if test="collectDate != null">
				#{collectDate,jdbcType=DATE},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="pojo.CollectExample"
		resultType="java.lang.Long">
		select count(*) from collect
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update collect
		<set>
			<if test="record.collectId != null">
				collect_id = #{record.collectId,jdbcType=INTEGER},
			</if>
			<if test="record.collectUserid != null">
				collect_userId =
				#{record.collectUserid,jdbcType=INTEGER},
			</if>
			<if test="record.collectTextid != null">
				collect_textId =
				#{record.collectTextid,jdbcType=INTEGER},
			</if>
			<if test="record.collectDate != null">
				collect_date = #{record.collectDate,jdbcType=DATE},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update collect
		set collect_id = #{record.collectId,jdbcType=INTEGER},
		collect_userId = #{record.collectUserid,jdbcType=INTEGER},
		collect_textId = #{record.collectTextid,jdbcType=INTEGER},
		collect_date = #{record.collectDate,jdbcType=DATE}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="pojo.Collect">
		update collect
		<set>
			<if test="collectUserid != null">
				collect_userId = #{collectUserid,jdbcType=INTEGER},
			</if>
			<if test="collectTextid != null">
				collect_textId = #{collectTextid,jdbcType=INTEGER},
			</if>
			<if test="collectDate != null">
				collect_date = #{collectDate,jdbcType=DATE},
			</if>
		</set>
		where collect_id = #{collectId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="pojo.Collect">
		update collect
		set
		collect_userId = #{collectUserid,jdbcType=INTEGER},
		collect_textId =
		#{collectTextid,jdbcType=INTEGER},
		collect_date =
		#{collectDate,jdbcType=DATE}
		where collect_id =
		#{collectId,jdbcType=INTEGER}
	</update>
</mapper>